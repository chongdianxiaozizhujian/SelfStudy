/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/7.0.40
 * Generated at: 2018-09-02 13:46:20 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class index_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public void _jspInit() {
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\">\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\">\r\n");
      out.write("<title>Insert title here</title>\r\n");
      out.write("<base href=\"http://");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.serverName }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
      out.write(':');
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.serverPort }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
      out.write("/\" />\r\n");
      out.write("<link rel=\"stylesheet\" type=\"text/css\" href=\"style/css.css\" />\r\n");
      out.write("<script type=\"text/javascript\" src=\"script/jquery-1.7.2.js\"></script>\r\n");
      out.write("<script type=\"text/javascript\" src=\"script/dateFormate.js\"></script>\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("\t$(function() {\r\n");
      out.write("\t\t//显示聊天信息\r\n");
      out.write("\t\t//保存当前本地最新的聊天记录的id值\r\n");
      out.write("\t\tvar finalMessageId = 0;\r\n");
      out.write("\t\taskForNew();\r\n");
      out.write("\t\t//访问服务器是否存在新的聊天信息\r\n");
      out.write("\t\tfunction askForNew() {\r\n");
      out.write("\t\t\t$.post(\"ServletAsk\",{\"finalMessageId\":finalMessageId},function(hasNew) {\r\n");
      out.write("\t\t\t\tif(hasNew == \"true\") {\r\n");
      out.write("\t\t\t\t\t//向服务器发送请求，获取最新聊天信息\r\n");
      out.write("\t\t\t\t\t//alert(\"ok\");\r\n");
      out.write("\t\t\t\t\tgetNew();\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t},\"text\");\r\n");
      out.write("\t\t\t//每一秒中请求服务器一次\r\n");
      out.write("\t\t\tsetTimeout(askForNew, 1000);\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\t//获取最新聊天信息\r\n");
      out.write("\t\tfunction getNew() {\r\n");
      out.write("\t\t\tvar $showMessage = $(\"#showMessage\");\r\n");
      out.write("\t\t\t$.post(\"ServletGetNew\",{\"finalMessageId\":finalMessageId},function(newMessage) {\r\n");
      out.write("\t\t\t\tfor(var i = 0; i < newMessage.length; i++) {\r\n");
      out.write("\t\t\t\t\tvar messageId = newMessage[i].messageId;\r\n");
      out.write("\t\t\t\t\tvar message = newMessage[i].message;\r\n");
      out.write("\t\t\t\t\tvar messageTime = newMessage[i].messageTime;\r\n");
      out.write("\t\t\t\t\tmessageTime = new Date(messageTime).Format(\"yyyy年MM月dd日 hh:mm:ss\");\r\n");
      out.write("\t\t\t\t\tvar htmlStr = \"<div>\" + messageTime + \" \" + message + \"</div>\";\r\n");
      out.write("\t\t\t\t\t//$(\"#showMessage\").append(htmlStr);\r\n");
      out.write("\t\t\t\t\t$showMessage.append(htmlStr);\r\n");
      out.write("\t\t\t\t\tfinalMessageId = messageId;\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t\t//获取#showMessage对应的DOM对象，通过scrollTop属性设置滚动条的显示位置\r\n");
      out.write("\t\t\t\t//设置相对滚动条顶部的偏移\r\n");
      out.write("\t\t\t\t$showMessage[0].scrollTop = 10000000;\r\n");
      out.write("\t\t\t},\"json\");\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t//保存聊天信息\r\n");
      out.write("\t\t//给多行文本框绑定键盘按下事件\r\n");
      out.write("\t\t$(\"#sendMessage\").keypress(function(event) {\r\n");
      out.write("\t\t\t//按下回车键，发送聊天消息\r\n");
      out.write("\t\t\t//通过事件对象的keyCode属性获取按键对应的ASCII马值\r\n");
      out.write("\t\t\t//alert(event.keyCode);\r\n");
      out.write("\t\t\t//按下回车键，发送聊天信息\r\n");
      out.write("\t\t\tif(event.keyCode == 13) {\r\n");
      out.write("\t\t\t\t//获取聊天信息数据\r\n");
      out.write("\t\t\t\tvar message = $.trim(this.value);\r\n");
      out.write("\t\t\t\t//ajax请求发送聊天信息到服务器\r\n");
      out.write("\t\t\t\t$.post(\"ServletSay\",{\"message\":message});\r\n");
      out.write("\t\t\t\t//清空多行文本框\r\n");
      out.write("\t\t\t\tthis.value = \"\";\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t});\r\n");
      out.write("\t});\r\n");
      out.write("</script>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\r\n");
      out.write("\t<img src=\"image/logo.gif\" />\r\n");
      out.write("\r\n");
      out.write("\t<div id=\"showMessage\"></div>\r\n");
      out.write("\t<textarea id=\"sendMessage\"></textarea>\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try { out.clearBuffer(); } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
