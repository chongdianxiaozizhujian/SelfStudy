模块的定义:
模块是一个包含所有你定义的函数和变量的文件，其后缀名是.py。模块可以被别的程序引入，以使用该模块中的函数等功能。
-------------------------------------
python 标准库中模块
import sys
print('命令行参数如下:')
for i in sys.argv:
    print(i)
print('\n\nPython路径为:',sys.path,'\n')
说明:
1、import sys 引入 python 标准库中的 sys.py 模块；这是引入某一模块的方法。
2、sys.argv 是一个包含命令行参数的列表。
3、sys.path 包含了一个 Python 解释器自动查找所需模块的路径的列表。
--------------------------------------
import 语句
import module1[, module2[,... moduleN]
当解释器遇到 import 语句，如果模块在当前的搜索路径就会被导入。
搜索路径是一个解释器会先进行搜索的所有目录的列表。如想要导入模块 support，需要把命令放在脚本的顶端
例如:test.py里面导入了support.py,并且调用了里面的方法
--------------------------------------
一个模块只会被导入一次，不管你执行了多少次import。这样可以防止导入模块被一遍又一遍地执行。
当我们使用import语句的时候，Python解释器是怎样找到对应的文件的呢？
这就涉及到Python的搜索路径，搜索路径是由一系列目录名组成的，Python解释器就依次从这些目录中去寻找所引入的模块。
这看起来很像环境变量，事实上，也可以通过定义环境变量的方式来确定搜索路径。
搜索路径是在Python编译或安装的时候确定的，安装新的库应该也会修改。

sys.path 输出是一个列表，其中第一项是空串''，代表当前目录（若是从一个脚本中打印出来的话，可以更清楚地看出是哪个目录），亦即我们执行python解释器的目录（对于脚本的话就是运行的脚本所在的目录）。
因此若像我一样在当前目录下存在与要引入模块同名的文件，就会把要引入的模块屏蔽掉。
了解了搜索路径的概念，就可以在脚本中修改sys.path来引入一些不在搜索路径中的模块。
--------------------------------------
from…import 语句
Python的from语句让你从模块中导入一个指定的部分到当前命名空间中，语法如下：
from modname import name1[, name2[, ... nameN]]
--------------------------------------
from…import* 语句
把一个模块的所有内容全都导入到当前的命名空间
--------------------------------------
__name__属性
一个模块被另一个程序第一次引入时，其主程序将运行。如果我们想在模块被引入时，
模块中的某一程序块不执行，我们可以用__name__属性来使该程序块仅在该模块自身运行时执行。
例子:use_using_name.py导入了using_name.py,然后分别运行use_using_name.py和
using_name.py可以看到效果
说明： 每个模块都有一个__name__属性，当其值是'__main__'时，表明该模块自身在运行，否则是被引入。
--------------------------------------
dir() 函数
内置的函数 dir() 可以找到模块内定义的所有名称,以一个字符串列表的形式返回
如果没有给定参数，那么 dir() 函数会罗列出当前定义的所有名称
--------------------------------------
标准模块
特别的模块 sys ，它内置在每一个 Python 解析器中。
变量 sys.ps1 和 sys.ps2 定义了主提示符和副提示符所对应的字符串
例子:
交互式
>>> import sys
>>> sys.ps1
'>>> '
>>> sys.ps2
'... '
>>> sys.ps1 = 'C> '
C> print('Yuck!')
Yuck!
C>
------------------------------------------------------------
包
包是一种管理 Python 模块命名空间的形式，采用"点模块名称"。

比如一个模块的名称是 A.B， 那么他表示一个包 A中的子模块 B 。

使用模块的时候，不同模块之间的全局变量不会相互影响，采用点模块名称这种形式也不用担心不同库之间的模块重名的情况。

从一个包中导入*
------------------------------------------------------------




