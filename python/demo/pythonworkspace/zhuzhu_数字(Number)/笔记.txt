数字
Python 数字数据类型用于存储数值。
数据类型是不允许改变的,这就意味着如果改变数字数据类型的值，将重新分配内存空间。
可以通过使用del语句删除单个或多个对象的引用
del var
del var_a, var_b

Python 支持三种不同的数值类型
整型(int) - 通常被称为是整型或整数，是正或负整数，不带小数点。Python3 整型是没有限制大小的，可以当作 Long 类型使用，所以 Python3 没有 Python2 的 Long 类型。
浮点型(float) - 浮点型由整数部分与小数部分组成，浮点型也可以使用科学计数法表示（2.5e2 = 2.5 x 102 = 250）
复数((complex)) - 复数由实数部分和虚数部分构成，可以用a + bj,或者complex(a,b)表示， 复数的实部a和虚部b都是浮点型。
---------------------------------------------------------------
数字类型转换
int(x) 将x转换为一个整数。

float(x) 将x转换到一个浮点数。

complex(x) 将x转换到一个复数，实数部分为 x，虚数部分为 0。

complex(x, y) 将 x 和 y 转换到一个复数，实数部分为 x，虚数部分为 y。x 和 y 是数字表达式。

--------------------------------------------------------------
数字运算
--------------------------------------------------------------
数学函数
abs(x)	返回数字的绝对值，如abs(-10) 返回 10
ceil(x)	返回数字的上入整数，如math.ceil(4.1) 返回 5
----
cmp(x, y)如果 x < y 返回 -1, 如果 x == y 返回 0, 如果 x > y 返回 1。 Python 3 已废弃 。使用 使用 (x>y)-(x<y) 替换。
已停用
被如下五个函数替代
import operator       #首先要导入运算符模块
operator.gt(1,2)      #意思是greater than（大于）
operator.ge(1,2)      #意思是greater and equal（大于等于）
operator.eq(1,2)      #意思是equal（等于）
operator.le(1,2)      #意思是less and equal（小于等于）
operator.lt(1,2)      #意思是less than（小于）
----
exp(x)	返回e的x次幂(ex),如math.exp(1) 返回2.718281828459045
fabs(x)	返回数字的绝对值，如math.fabs(-10) 返回10.0
floor(x)	返回数字的下舍整数，如math.floor(4.9)返回 4
log(x)	如math.log(math.e)返回1.0,math.log(100,10)返回2.0
log10(x)	返回以10为基数的x的对数，如math.log10(100)返回 2.0
max(x1, x2,...)	返回给定参数的最大值，参数可以为序列。
min(x1, x2,...)	返回给定参数的最小值，参数可以为序列。
modf(x)	返回x的整数部分与小数部分，两部分的数值符号与x相同，整数部分以浮点型表示。
pow(x, y)	x**y 运算后的值。
round(x [,n])	返回浮点数x的四舍五入值，如给出n值，则代表舍入到小数点后的位数。
注意-当个位为奇数，小数部分>=0.5入，其余为舍
-----当个位为偶数，小数部分>0.5入，其余为舍。
sqrt(x)	返回数字x的平方根。
--------------------------------------------------------------
随机数函数
choice(seq)	从序列的元素中随机挑选一个元素，比如random.choice(range(10))，从0到9中随机挑选一个整数。
randrange ([start,] stop [,step])	从指定范围内，按指定基数递增的集合中获取一个随机数，基数缺省值为1
random()	随机生成下一个实数，它在[0,1)范围内。
seed([x])	改变随机数生成器的种子seed。如果你不了解其原理，你不必特别去设定seed，Python会帮你选择seed。
shuffle(lst)	将序列的所有元素随机排序
uniform(x, y)	随机生成下一个实数，它在[x,y]范围内。
random.randint(x,y)　#随机生一个整数int类型，可以指定这个整数的范围
random.sample(sequence,length) 可以从指定的序列中，随机的截取指定长度的片断，不修改原序列。
--------------------------------------------------------------
三角函数
acos(x)	返回x的反余弦弧度值。
asin(x)	返回x的反正弦弧度值。
atan(x)	返回x的反正切弧度值。
atan2(y, x)	返回给定的 X 及 Y 坐标值的反正切值。
cos(x)	返回x的弧度的余弦值。
hypot(x, y)	返回欧几里德范数 sqrt(x*x + y*y)。
sin(x)	返回的x弧度的正弦值。
tan(x)	返回x弧度的正切值。
degrees(x)	将弧度转换为角度,如degrees(math.pi/2) ， 返回90.0
radians(x)	将角度转换为弧度
--------------------------------------------------------------
数学常量
pi	数学常量 pi（圆周率，一般以π来表示）
e	数学常量 e，e即自然常数（自然常数）。
-------------------------------------------------------------------
补充
奇进偶弃
print(round(10.5)) 10
print(round(11.5)) 12

python 不支持复数转换为整数或浮点数
------------------------------------------------------
fractions 模块提供了分数类型的支持。

构造函数：
class fractions.Fraction(numerator=0, denominator=1)
class fractions.Fraction(int|float|str|Decimal|Fraction)
可以同时提供分子（numerator）和分母（denominator）给构造函数用于实例化Fraction类，
但两者必须同时是int类型或者numbers.Rational类型，否则会抛出类型错误。当分母为0，初
始化的时候会导致抛出异常ZeroDivisionError。
浮点数与分数的转换
f=2.5
z=Fraction(*f.as_integer_ratio())
print(z)
x=Fraction(1,3)
print(float(x))
-----------------------------------------------------
小数对象:

decimal 模块提供了一个 Decimal 数据类型用于浮点数计算，拥有更高的精度。
import decimal
decimal.getcontext().prec=4 #指定精度(4)
print(decimal.Decimal(1)/decimal.Decimal(7))
with decimal.localcontext() as ctx: #小数上下文管理器
    ctx.prec=4
    print(decimal.Decimal('1.00')/decimal.Decimal('3.00'))
------------------------------------------------------
Python中一切都是对象，对象比较可以用 == 或者 is。

== 比较的是两个对象的内容是否相等，默认会调用对象的 __eq__() 方法。

is 比较的是两个对象的 id 是否相等，也就是是否是同一个对象，是否指向同一个内存地址。